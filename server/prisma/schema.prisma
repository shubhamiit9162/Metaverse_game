datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")

}

generator client {
  provider = "prisma-client-js"
  previewFeatures = ["relationJoins"]

}



model User {
  id        String   @id @default(uuid())
  username  String   @unique
  email     String   @unique
  password  String
  status   UserStatus @default(OFFLINE)
  avatar    String?
  bio       String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  spaces    Space[]
  messages  Message[]
  spaceMembers SpaceMember[]
}

model Space {
  id          String    @id @default(uuid())
  name        String
  description String?
  owner       User      @relation(fields: [ownerId], references: [id])
  ownerId     String
  type        SpaceType @default(PUBLIC)
  maxUsers    Int       @default(10)
  isActive    Boolean   @default(true)
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
  messages    Message[]
  members     SpaceMember[]
}

model SpaceMember {
  id        String   @id @default(uuid())
  user      User     @relation(fields: [userId], references: [id])
  userId    String
  space     Space    @relation(fields: [spaceId], references: [id])
  spaceId   String
  role      MemberRole @default(MEMBER)
  joinedAt  DateTime @default(now())

  @@unique([userId, spaceId])
}

model Message {
  id        String   @id @default(uuid())
  content   String
  type      MessageType @default(TEXT)
  sender    User     @relation(fields: [senderId], references: [id])
  senderId  String
  space     Space    @relation(fields: [spaceId], references: [id])
  spaceId   String
  createdAt DateTime @default(now())
}

enum SpaceType {
  PUBLIC
  PRIVATE
}

enum UserStatus {
  ONLINE
  OFFLINE
  AWAY
  DO_NOT_DISTURB
}

enum MemberRole {
  OWNER
  ADMIN
  MODERATOR
  MEMBER
}

enum MessageType {
  TEXT
  SYSTEM
  VOICE
  IMAGE
}